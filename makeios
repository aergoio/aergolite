#!/bin/bash

set -e

# binn

if [[ ! -d ../binn ]] ; then
git clone --depth=1 https://github.com/liteserver/binn ../binn
fi

if [[ ! -f ../binn/ios/libbinn.a ]] ; then
cd ../binn
./makeios
cd -
fi

# libuv

if [[ ! -d ../libuv ]] ; then
git clone --depth=1 https://github.com/libuv/libuv ../libuv
fi

if [[ ! -f ../libuv/ios/libuv.a ]] ; then
cd ../libuv
wget https://gist.githubusercontent.com/kroggen/aed5776b74b6353c715d27b19051ada8/raw/04092577bb8f95f9c4075f871d3a3a27300c2887/makeios
./autogen.sh
./makeios
cd -
fi

# secp256k1-vrf

if [[ ! -d ../secp256k1-vrf ]] ; then
git clone --depth=1 https://github.com/aergoio/secp256k1-vrf ../secp256k1-vrf
fi

if [[ ! -f ../secp256k1-vrf/ios/libsecp256k1-vrf.a ]] ; then
cd ../secp256k1-vrf
./makeios
cd -
fi


# aergolite

PLATFORMPATH="/Applications/Xcode.app/Contents/Developer/Platforms"
TOOLSPATH="/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin"
export IPHONEOS_DEPLOYMENT_TARGET="8.0"
pwd=`pwd`

findLatestSDKVersion()
{
    sdks=`ls $PLATFORMPATH/$1.platform/Developer/SDKs`
    arr=()
    for sdk in $sdks
    do
       echo $sdk
       arr[${#arr[@]}]=$sdk
    done

    # Last item will be the current SDK, since it is alpha ordered
    count=${#arr[@]}
    if [ $count -gt 0 ]; then
       sdk=${arr[$count-1]:${#1}}
       num=`expr ${#sdk}-4`
       SDKVERSION=${sdk:0:$num}
    else
       SDKVERSION="8.0"
    fi
}

buildit()
{
    target=$1
    platform=$2

    echo ""
    echo "-------------------------------------------------------------------------------"
    echo " Compiling for $platform on $target"
    echo "-------------------------------------------------------------------------------"

    export PLATFORM=$platform
    export CC="$(xcrun -sdk iphoneos -find clang)"
    export STRIP="$(xcrun -sdk iphoneos -find strip)"
    export LD="$(xcrun -sdk iphoneos -find ld)"
    export CPP="$CC -E"
    export CFLAGS="-arch ${target} -isysroot $PLATFORMPATH/$platform.platform/Developer/SDKs/$platform$SDKVERSION.sdk -miphoneos-version-min=$SDKMINVERSION -I../binn/src -I../libuv/include -I../secp256k1-vrf/include"
    export AR=$(xcrun -sdk iphoneos -find ar)
    export RANLIB=$(xcrun -sdk iphoneos -find ranlib)
    export CPPFLAGS="-arch ${target} -isysroot $PLATFORMPATH/$platform.platform/Developer/SDKs/$platform$SDKVERSION.sdk -miphoneos-version-min=$SDKMINVERSION"
    export LDFLAGS="-arch ${target} -isysroot $PLATFORMPATH/$platform.platform/Developer/SDKs/$platform$SDKVERSION.sdk -L."  # -L../binn/output/$target/lib -L../libuv/output/$target/lib

    #export LIBFLAGS="-DSQLITE_ENABLE_LOCKING_STYLE=0"  -- to remove warning on getuuid()

    #export prefix="$pwd/output/$target"

    make clean
    make ios
    #make install

    mkdir -p $pwd/ios/$target
    mv libaergolite.a $pwd/ios/$target
    mv libaergolite.dylib $pwd/ios/$target
}

cp ../binn/ios/libbinn.a .
cp ../binn/ios/libbinn.dylib .
cp ../libuv/ios/libuv.a .
cp ../libuv/ios/libuv.1.dylib libuv.dylib
cp ../secp256k1-vrf/ios/libsecp256k1-vrf.a .
cp ../secp256k1-vrf/ios/libsecp256k1-vrf.dylib .

install_name_tool -id @rpath/libuv.dylib libuv.dylib
install_name_tool -id @rpath/libbinn.dylib libbinn.dylib
install_name_tool -id @rpath/libsecp256k1-vrf.dylib libsecp256k1-vrf.dylib

findLatestSDKVersion iPhoneOS
SDKMINVERSION="8.0"

buildit armv7 iPhoneOS
buildit armv7s iPhoneOS
buildit arm64 iPhoneOS
buildit i386 iPhoneSimulator
buildit x86_64 iPhoneSimulator

LIPO=$(xcrun -sdk iphoneos -find lipo)
$LIPO -create $pwd/ios/armv7/libaergolite.a  $pwd/ios/armv7s/libaergolite.a $pwd/ios/arm64/libaergolite.a $pwd/ios/x86_64/libaergolite.a $pwd/ios/i386/libaergolite.a -output libaergolite.a
$LIPO -create $pwd/ios/armv7/libaergolite.dylib  $pwd/ios/armv7s/libaergolite.dylib $pwd/ios/arm64/libaergolite.dylib $pwd/ios/x86_64/libaergolite.dylib $pwd/ios/i386/libaergolite.dylib -output libaergolite.dylib

#install_name_tool -id @rpath/libuv.dylib libuv.dylib
#install_name_tool -id @rpath/libbinn.dylib libbinn.dylib
#install_name_tool -id @rpath/libaergolite.dylib libaergolite.dylib
#install_name_tool -change libuv.dylib @rpath/libuv.dylib libaergolite.dylib
#install_name_tool -change libbinn.dylib @rpath/libbinn.dylib libaergolite.dylib

install_name_tool -id @rpath/libaergolite.dylib libaergolite.dylib

mv libbinn.a $pwd/ios/
mv libbinn.dylib $pwd/ios/
mv libuv.a $pwd/ios/
mv libuv.1.dylib libuv.dylib $pwd/ios/
mv libsecp256k1-vrf.a $pwd/ios/
mv libsecp256k1-vrf.dylib $pwd/ios/
mv libaergolite.a $pwd/ios/
mv libaergolite.dylib $pwd/ios/
make clean

echo ""
echo "done. the files are in the ios folder"
